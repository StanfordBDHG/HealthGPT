#
# This source file is part of the Stanford HealthGPT project
#
# SPDX-FileCopyrightText: 2023 Stanford University & Project Contributors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

default_platform(:ios)

platform :ios do
  before_all do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "5"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"
  end

  desc "Build and test"
  lane :test do
    run_tests(
      skip_build: true,
      derived_data_path: ".derivedData",
      code_coverage: true,
      devices: ["iPhone 15 Pro"],
      disable_slide_to_type: false,
      concurrent_workers: 1,
      max_concurrent_simulators: 1,
      result_bundle: true,
      output_directory: ".",
      xcargs: "-skipPackagePluginValidation"
    )
  end

  desc "CodeQL"
  lane :codeql do
    build_app(
      skip_archive: true,
      skip_codesigning: true,
      derived_data_path: ".derivedData",
      xcargs: "-skipPackagePluginValidation"
    )
  end

  desc "Build app"
  lane :build do
    build_app(
      derived_data_path: ".derivedData",
      xcargs: "-skipPackagePluginValidation",
      export_options: {
        provisioningProfiles: {
          "edu.stanford.bdhg.healthgpt" => "HealthGPT"
        }
      }
    )
  end

  desc "Sign in to the App Store Connect API"
  lane :signin do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_BASE64"],
      is_key_content_base64: true
    )
  end

  desc "Publish a beta release to internal TestFlight testers"
  lane :beta do
    signin
    increment_build_number(
      {
        build_number: latest_testflight_build_number + 1
      }
    )
    build
    commit = last_git_commit
    upload_to_testflight(
      distribute_external: true,
      groups: [
        "External Testers"
      ],
      submit_beta_review: true,
      notify_external_testers: true,
      expire_previous_builds: true,
      changelog: commit[:message]
    )
  end
end
